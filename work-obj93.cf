v 4
file . "banco_regs_tb.vhd" "e15ed65dd29c05f63d30ef3cab7d733a4b916c59" "20240502025430.631":
  entity banco_regs_tb at 1( 0) + 0 on 33;
  architecture a_banco_regs_tb of banco_regs_tb at 8( 107) + 0 on 34;
file . "registrador_tb.vhd" "a7533b7e9a71ca944dcd8055bdd7bcc475b63374" "20240502025251.955":
  entity registrador_tb at 1( 0) + 0 on 29;
  architecture a_registrador_tb of registrador_tb at 8( 108) + 0 on 30;
file . "mux_8x1_tb.vhd" "8f80ab60ddff13d281417cbbf86f91cab772d818" "20240502024743.837":
  entity mux_8x1_tb at 1( 0) + 0 on 27;
  architecture a_mux_8x1_tb of mux_8x1_tb at 8( 97) + 0 on 28;
file . "top_level.vhd" "99fd63cc0b4bf83900cf409f8edc8f684ff2ddb0" "20240502015813.457":
  entity top_level at 1( 0) + 0 on 21;
  architecture a_top_level of top_level at 13( 203) + 0 on 22;
file . "registrador.vhd" "b0016665e73721dc1cbbb2d9ed71c75abcc10b41" "20240502015639.986":
  entity registrador at 1( 0) + 0 on 17;
  architecture a_registrador of registrador at 15( 317) + 0 on 18;
file . "mux_4x1.vhd" "294a5a456ed742d259132dbe13550f444100384b" "20240502015559.072":
  entity mux_4x1 at 1( 0) + 0 on 13;
  architecture a_mux_4x1 of mux_4x1 at 16( 377) + 0 on 14;
file . "banco_regs.vhd" "c0adeecadc94139e47ea47b54397d521e60be332" "20240502015456.770":
  entity banco_regs at 1( 0) + 0 on 11;
  architecture a_banco_regs of banco_regs at 17( 417) + 0 on 12;
file . "mux_8x1.vhd" "efb51574f9ed7570fcdb7f0d2659a2a985255d43" "20240502015609.325":
  entity mux_8x1 at 1( 0) + 0 on 15;
  architecture a_mux_8x1 of mux_8x1 at 20( 518) + 0 on 16;
file . "ula_16bits.vhd" "60abb73914c6ee426021fcef62224a32693802e2" "20240502015649.651":
  entity ula_16bits at 1( 0) + 0 on 19;
  architecture a_ula_16bits of ula_16bits at 14( 310) + 0 on 20;
file . "mux_4x1_tb.vhd" "ff6ee5b6428262cfdd4ac7df1a93733133a66eb5" "20240502021759.972":
  entity mux_4x1_tb at 1( 0) + 0 on 23;
  architecture a_mux_4x1_tb of mux_4x1_tb at 8( 104) + 0 on 24;
file . "ula_16bits_tb.vhd" "caed0d49f322fb0566d99a4d4e38c0d7f898851e" "20240502025318.108":
  entity ula_16bits_tb at 1( 0) + 0 on 31;
  architecture a_ula_16bits_tb of ula_16bits_tb at 8( 107) + 0 on 32;
